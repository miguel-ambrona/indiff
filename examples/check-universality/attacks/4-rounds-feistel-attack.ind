is_universal{

  rounds F1,F2,F3,F4.

  oracle R (x0,x1) :=
    x2 = x0 + F1(x1);
    x3 = x1 + F2(x2);
    x4 = x2 + F3(x3);
    x5 = x3 + F4(x4);
    return x4, x5.

  oracle R^-1 (x4,x5) :=
    x3 = x5 + F4(x4);
    x2 = x4 + F3(x3);
    x1 = x3 + F2(x2);
    x0 = x2 + F1(x1);
    return x0, x1.


  distinguisher :=
    r182 <-$ {0,1}^n;

    r190 <- F3(r182);
    r191 <- F2(r190);
    r192 <- F1(r182 + r191);
    r193 <- F2(r182 + r191 + r190);
    r194 <- F1(r182 + r193);

    X0 = r190 + r194;
    X0' = r182 + r190 + r191 + r194;
    X0'' = r182 + r190 + r191 + r192;
    X1 = r182 + r193;
    X1' = r182 + r193;
    X1'' = r182 + r191;

    Y0 = R_1(X0, X1);
    Y1 = R_2(X0, X1);
    Y0' = R_1(X0', X1');
    Y1' = R_2(X0', X1');
    Y0'' = R_1(X0'', X1'');
    Y1'' = R_2(X0'', X1'');

    assert X0 + X0' + X1'' = 0;
    assert Y0 + Y0' + Y0'' = 0;

    return 1;
  .

}.
