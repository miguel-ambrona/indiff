(* 3-rounds Feistel-Network attack with branching *)

is_universal {

  rounds F1,F2,F3.

  oracle R (x0,x1) :=
    x2 = x0 + F1(x1);
    x3 = x1 + F2(x2);
    x4 = x2 + F3(x3);
    return x3, x4.

  oracle R^-1 (x3,x4) :=
    x2 = x4 + F3(x3);
    x1 = x3 + F2(x2);
    x0 = x2 + F1(x1);
    return x0, x1.

  distinguisher :=
    x0 <-$ {0,1}^n;
    x1 <-$ {0,1}^n;
    x1' <-$ {0,1}^n;
    f1 <-  F1(x1);
    f1' <- F1(x1');
    begin prob choice:
      case:
        f2 <- F2(x0 + f1);
        assert R_1(x0,x1) = x1 + f2;
        assert f1 <> 0;
        return 1;

      case:
        f2' <- F2(x0 + f1');
        assert R_1(x0,x1') = x1' + f2';
        assert f1 <> 0;
        return 1;
    end
  .

}.
