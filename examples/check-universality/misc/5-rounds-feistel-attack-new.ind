(* 5-rounds Feistel Attack. New attack found with unification. *)

is_universal {

  rounds F1,F2,F3,F4,F5.

  oracle R (x0,x1) :=
    x2 = x0 + F1(x1);
    x3 = x1 + F2(x2);
    x4 = x2 + F3(x3);
    x5 = x3 + F4(x4);
    x6 = x4 + F5(x5);
    return x5, x6.

  oracle R^-1 (x5,x6) :=
    x4 = x6 + F5(x5);
    x3 = x5 + F4(x4);
    x2 = x4 + F3(x3);
    x1 = x3 + F2(x2);
    x0 = x2 + F1(x1);
    return x0, x1.

  distinguisher :=
    a1 <-$ {0,1}^n;
    a2 <-$ {0,1}^n;
    a3 <-$ {0,1}^n;

    f1 <- F3(a1);
    f2 <- F3(a2);
    v = f1 + f2 + a3;

    f3 <- F2(a3);
    f4 <- F2(v);    
    
    f5 <- F1(f3 + a2);
    f6 <- F1(f3 + a1);
    f7 <- F1(f4 + a2);
    f8 <- F1(f4 + a1);

    x0 = f5 + a3;
    x0' = f6 + a3;
    x0'' = f7 + v;
    x0''' = f8 + v;

    x1 = f3 + a2;
    x1' = f3 + a1; 
    x1'' = f4 + a2;
    x1''' = f4 + a1;

    x5 = R_1(x0,x1);
    x5' = R_1(x0',x1');
    x5'' = R_1(x0'',x1'');
    x5''' = R_1(x0''',x1''');

    assert x1 + x1' + x1'' + x1''' = 0;
    assert x5 + x5' + x5'' + x5''' = 0;

    assert x1 <> x1';   assert x1 <> x1''; assert x1 <> x1''';

    return 1;
  .

}.
